{"version":3,"sources":["App.js","index.js"],"names":["App","useState","volume","setVolume","isPlaying","setIsPlaying","currentTime","setCurrentTime","currentTrack","setCurrentTrack","useEffect","axios","get","then","response","data","Playlist","audioRef","useRef","className","style","width","margin","boxShadow","src","alt","title","onClick","audio","current","play","pause","type","name","min","max","step","onChange","event","target","value","seconds","duration","hours","parseInt","sec","secondsToHms","ref","onTimeUpdate","e","time","currentTarget","toFixed","fontWeight","song","artist","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQA+HeA,MAzHf,WAAgB,IAAD,MACeC,mBAAS,GADxB,mBACNC,EADM,KACEC,EADF,OAEqBF,oBAAS,GAF9B,mBAENG,EAFM,KAEKC,EAFL,OAGyBJ,mBAAS,GAHlC,mBAGNK,EAHM,KAGOC,EAHP,OAI2BN,mBAAS,IAJpC,mBAINO,EAJM,KAIQC,EAJR,KAMbC,qBAAU,WACRC,IAAMC,IAAN,uCAAiDC,MAAK,SAACC,GACrDL,EAAgBK,EAASC,KAAKC,eAE/B,IAEH,IAAMC,EAAWC,mBAuDjB,OACE,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBACEA,UAAU,OACVC,MAAO,CACLC,MAAO,QACPC,OAAQ,OACRC,UAAW,2BALf,UAQE,qBACEC,IAAI,qMACJL,UAAU,eACVM,IAAI,QAEN,mBAAGN,UAAU,MAAMO,MAAM,aAAaC,QAhEvB,WACrB,IAAMC,EAAQX,EAASY,QACvBD,EAAM1B,OAASA,EAEVE,IACHC,GAAa,GACbuB,EAAME,QAGJ1B,IACFC,GAAa,GACbuB,EAAMG,UAqDF,SACI3B,EAAkB,eAAN,WAEhB,qBAAIe,UAAU,8BAAd,UACE,oBAAIA,UAAU,kBAAd,SACE,qBAAKA,UAAU,kBAAf,SACE,uBACEa,KAAK,QACLC,KAAK,SACLd,UAAU,SACVe,IAAI,IACJC,IAAI,IACJC,KAAK,OACLC,SAlFO,SAACC,GACtBnC,EAAUmC,EAAMC,OAAOC,OACvBvB,EAASY,QAAQ3B,OAASA,SAoFlB,oBAAIiB,UAAU,kBAAd,SA7DW,SAACsB,GACpB,IAAKA,EAAS,MAAO,QAErB,IAAIC,EAAWD,EACXE,EAAQD,EAAW,KACvBA,GAAsB,KAEtB,IAAIR,EAAMU,SAASF,EAAW,IAC9BA,GAAsB,GAEtB,IAAIG,EAAMD,SAASF,GASnB,OAPIG,EAAM,KACRA,EAAG,WAAOA,IAERX,EAAM,KACRA,EAAG,WAAOA,IAGRU,SAASD,EAAO,IAAM,EAClB,GAAN,OAAUC,SAASD,EAAO,IAA1B,YAAiCT,EAAjC,YAAwCW,GACvB,IAARX,EACH,MAAN,OAAaW,GAEP,GAAN,OAAUX,EAAV,YAAiBW,GAqCsBC,CAAaxC,QAEhD,sBAAKa,UAAU,YAAf,UACE,uBACE4B,IAAK9B,EACL+B,aAvEe,SAACC,GAC1B,IAAMC,EAAOD,EAAEE,cAAc7C,YAC7BC,EAAe2C,EAAKE,QAAQ,KAsElB5B,IA5GU,0CA8GZ,mBAAGL,UAAU,YAAYC,MAAO,CAAEiC,WAAY,MAAO/B,OAAQ,GAA7D,mBACGd,EAAa8C,YADhB,aACG,EAAmB5B,QAEtB,mBAAGP,UAAU,YAAYC,MAAO,CAAEE,OAAQ,GAA1C,mBACGd,EAAa+C,cADhB,aACG,EAAqB7B,mBCjHpC8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8f962880.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nconst API_STREAM_LINK = \"https://air.aristocrats.fm:8000/live2\";\n\nfunction App() {\n  const [volume, setVolume] = useState(1);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [currentTrack, setCurrentTrack] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(`http://localhost:5000/current-track`).then((response) => {\n      setCurrentTrack(response.data.Playlist);\n    });\n  }, []);\n\n  const audioRef = useRef();\n\n  const onVolumeChange = (event) => {\n    setVolume(event.target.value);\n    audioRef.current.volume = volume;\n  };\n\n  const onBtnClickPlay = () => {\n    const audio = audioRef.current;\n    audio.volume = volume;\n\n    if (!isPlaying) {\n      setIsPlaying(true);\n      audio.play();\n    }\n\n    if (isPlaying) {\n      setIsPlaying(false);\n      audio.pause();\n    }\n  };\n\n  const getCurrentDuration = (e) => {\n    const time = e.currentTarget.currentTime;\n    setCurrentTime(time.toFixed(2));\n  };\n\n  const secondsToHms = (seconds) => {\n    if (!seconds) return \"00:00\";\n\n    let duration = seconds;\n    let hours = duration / 3600;\n    duration = duration % 3600;\n\n    let min = parseInt(duration / 60);\n    duration = duration % 60;\n\n    let sec = parseInt(duration);\n\n    if (sec < 10) {\n      sec = `0${sec}`;\n    }\n    if (min < 10) {\n      min = `0${min}`;\n    }\n\n    if (parseInt(hours, 10) > 0) {\n      return `${parseInt(hours, 10)}:${min}:${sec}`;\n    } else if (min === 0) {\n      return `00:${sec}`;\n    } else {\n      return `${min}:${sec}`;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div\n          className=\"card\"\n          style={{\n            width: \"18rem\",\n            margin: \"auto\",\n            boxShadow: \"4px 3px 8px 1px #969696\",\n          }}\n        >\n          <img\n            src=\"https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Forig14.deviantart.net%2F5162%2Ff%2F2014%2F153%2F9%2Fe%2Fno_album_art__no_cover___placeholder_picture_by_cmdrobot-d7kpm65.jpg&f=1&nofb=1\"\n            className=\"card-img-top\"\n            alt=\"...\"\n          />\n          <a className=\"dot\" title=\"Play/Pause\" onClick={onBtnClickPlay}>\n            {!isPlaying ? \"▶\" : \"❚❚\"}\n          </a>\n          <ul className=\"list-group list-group-flush\">\n            <li className=\"list-group-item\">\n              <div className=\"slide-container\">\n                <input\n                  type=\"range\"\n                  name=\"volume\"\n                  className=\"slider\"\n                  min=\"0\"\n                  max=\"1\"\n                  step=\"0.01\"\n                  onChange={onVolumeChange}\n                />\n              </div>\n            </li>\n            <li className=\"list-group-item\">{secondsToHms(currentTime)}</li>\n          </ul>\n          <div className=\"card-body\">\n            <audio\n              ref={audioRef}\n              onTimeUpdate={getCurrentDuration}\n              src={API_STREAM_LINK}\n            ></audio>\n            <p className=\"card-text\" style={{ fontWeight: \"600\", margin: 0 }}>\n              {currentTrack.song?.title}\n            </p>\n            <p className=\"card-text\" style={{ margin: 0 }}>\n              {currentTrack.artist?.title}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}